CREATE OR REPLACE PROCEDURE SP_AUMENTO_SALARIO(ANO_ADMISSAO IN INT, SALARIO_ATUAL IN NUMBER, AUMENTO OUT NUMBER)
AS
BEGIN 
    IF ANO_ADMISSAO <= 2000 THEN
        AUMENTO := SALARIO_ATUAL * 1.2;
    ELSIF ANO_ADMISSAO <= 2004 THEN
        AUMENTO := SALARIO_ATUAL * 1.1;
    ELSE
        AUMENTO := SALARIO_ATUAL *1.05;
    END IF;
END;

DROP TABLE TB_FUNCIONARIO;

CREATE TABLE TB_FUNCIONARIO(
    ID INT PRIMARY KEY,
    MATRICULA VARCHAR2(50),
    NM_FUNCIONARIO VARCHAR2(50),
    ANO_ADMISSAO INT,
    SALARIO NUMBER(10,2)
);

CREATE OR REPLACE PROCEDURE SP_ATUALIZAR_SALARIO
AS
    CURSOR C_FUNCIONARIO IS SELECT * FROM TB_FUNCIONARIO;
    R_FUNCIONARIO C_FUNCIONARIO%ROWTYPE;
    AUMENTO_DEVIDO NUMBER(10,2);
BEGIN
    OPEN C_FUNCIONARIO;
    DBMS_OUTPUT.PUT_LINE(R_FUNCIONARIO.ID);

    FETCH C_FUNCIONARIO INTO R_FUNCIONARIO;
    WHILE C_FUNCIONARIO%FOUND LOOP
        DBMS_OUTPUT.PUT_LINE(R_FUNCIONARIO.ID);
        SP_AUMENTO_SALARIO(R_FUNCIONARIO.ANO_ADMISSAO, R_FUNCIONARIO.SALARIO, AUMENTO_DEVIDO);
        UPDATE TB_FUNCIONARIO F
        SET SALARIO = AUMENTO_DEVIDO
        WHERE R_FUNCIONARIO.ID = F.ID;
        FETCH C_FUNCIONARIO INTO R_FUNCIONARIO;
    END LOOP;
END;

SELECT * FROM TB_FUNCIONARIO;

INSERT INTO TB_FUNCIONARIO(ID,MATRICULA, NM_FUNCIONARIO, ANO_ADMISSAO, SALARIO)
VALUES(
    SQ_FUNCIONARIO.NEXTVAL,
    '',
    '',
    2000,
    1000
);

INSERT INTO TB_FUNCIONARIO(ID,MATRICULA, NM_FUNCIONARIO, ANO_ADMISSAO, SALARIO)
VALUES(
    SQ_FUNCIONARIO.NEXTVAL,
    '',
    '',
    2004,
    1000
);

INSERT INTO TB_FUNCIONARIO(ID,MATRICULA, NM_FUNCIONARIO, ANO_ADMISSAO, SALARIO)
VALUES(
    SQ_FUNCIONARIO.NEXTVAL,
    '',
    '',
    2010,
    1000
);

BEGIN
    SP_ATUALIZAR_SALARIO();
END;